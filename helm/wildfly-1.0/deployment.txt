apiVersion: v1
kind: PersistentVolume
metadata:
  name: elytronstore-pv
spec:
  capacity:
    storage: 3Gi
  accessModes:
   - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs-storageclass
  nfs:
    path: /elytron-store
    server: 192.168.122.1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: standaloneconf-configmap
data:
  standalone.conf: |-
{{ .Files.Get "standalone.conf" | indent 4}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elytronstore-pvc
spec:
  storageClassName: nfs-storageclass
  accessModes:
  - ReadOnlyMany
  resources:
    requests:
      storage: 500m
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hostpath1
spec:
  storageClassName: nfs-storageclass
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500m
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: wildfly
  name: wildfly
spec:
  replicas: {{.Values.replicaCount}}
  serviceName: wildfly-svc
  selector:
    matchLabels:
      app: wildfly
      app.kubernetes.io/name: vault
  template:
    metadata:
      labels: 
        app: wildfly
        app.kubernetes.io/name: vault
      annotations:
        vault.security.banzaicloud.io/vault-addr: "https://vault:8200" # optional, the address of the Vault service, default values is https://vault:8200
        vault.security.banzaicloud.io/vault-role: "default" # optional, the default value is the name of the ServiceAccount the Pod runs in, in case of Secrets and ConfigMaps it is "default"
        vault.security.banzaicloud.io/vault-skip-verify: "false" # optional, skip TLS verification of the Vault server certificate
        vault.security.banzaicloud.io/vault-tls-secret: "vault-tls" # optional, the name of the Secret where the Vault CA cert is, if not defined it is not mounted
        vault.security.banzaicloud.io/vault-agent: "false" # optional, if true, a Vault Agent will be started to do Vault authentication, by default not needed and vault-env will do Kubernetes Service Account based Vault authentication
        vault.security.banzaicloud.io/vault-path: "kubernetes" 
    spec:
      containers:
      - image: quay.io/wildfly/wildfly
        name: wildfly
        ports:
          - name: http-port
            containerPort: 8080
        volumeMounts:
          - name: wildfly-vol
            mountPath: /opt/jboss/wildfly/standalone/deployments
          - name: wildfly-standalone
            mountPath: /opt/jboss/wildfly/standalone/configuration/standalone.xml
            subPath: standalone.xml
          - name: elytron-store
            mountPath: /opt/jboss/wildfly/standalone/configuration/mycredstore.keystore
            subPath: mycredstore.keystore
          - name: standaloneconf-volume
            mountPath: /opt/jboss/wildfly/bin/standalone.conf
            subPath: standalone.conf
        command: ["/bin/sh","-c"]
        args: ["/opt/jboss/wildfly/bin/add-user.sh -u admin -p redhat --silent && rm -f /vault/vault-env ; /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0"]
        env:
        - name: AWS_SECRET_ACCESS_KEY
          value: {{.Values.adminPassword}}
      volumes:
      - name: wildfly-vol
        persistentVolumeClaim:
          claimName: hostpath1
      - name: wildfly-standalone
        configMap:
          name: standalonexml
      - name: elytron-store
        persistentVolumeClaim:
          claimName: elytronstore-pvc
      - name: standaloneconf-volume
        configMap:
          name: standaloneconf-configmap
